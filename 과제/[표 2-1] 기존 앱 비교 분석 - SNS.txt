[표 2-1] 기존 앱 비교 분석 - SNS - 4
[표 2-2] 기존 앱 비교 분석 – 프로젝트 관리 - 4
[표 3-1] 오융택의 학기별 수강 과목 수 및 팀 프로젝트 수 19

[그림 1] 카카오톡 그룹 캘린더 기능 및 인스타그램 피드와 채팅 화면
 - 5
[그림 2] Trello 유료 기능과 무료 기능의 차이,팀 프로젝트 관리 기능(무료)
-6
[그림 3] Notion 프로젝트 관리 페이지
-6
[그림 4] Microsoft Teams 애플리케이션 기능 화면
-7
[그림 5] 팀원별 사용 플랫폼 예시-9
[그림 6] 플랫폼간 파일 전송시 호환되지 않는 예시 - 10
[그림 7] 크로스 플랫폼 빌드 예시 - 11
[그림 8] Teamony 시스템 구성도 - 11
[그림 9] Feed UI/UX 디자인 - 13
[그림 10] 채팅 시스템 UI/UX 디자인 - 13
[그림 11] Firestore 데이터베이스 구조 16
[그림 12] 실제 데이터베이스 저장 예시 16
[그림 13] 파일 저장 예시 17
[그림 14] 사용자 인증 절차 18
[그림 15] Teamony의 인증 절차19
[그림 16] 학기당 수강 과목 수 및 팀 프로젝트 수 20
[그림 17] 팀 리스트 관리의 플로우 차트와 화면 구현 예시 20
[그림 18] 팀 채팅방과 팀원 초대22
[그림 19] 일상 공유를 통한 팀원과의 친목 도모 22
[그림 20] 프로젝트 작업 관리 흐름 도식 25
[그림 21] 저장된 상태 변수들의 JSON 표현 26
[그림 22] 대시보드_간트 차트 27
[그림 23] 대시보드_모달창 27
[그림 24] 대시보드_작업 할당표 27
[그림 25] 대시보드_프로젝트 진행 상황 원형 그래프28
[그림 26] 팀 대시보드 화면28
[그림 27] Figma를 사용해 개발한 Teamony UI초기 디자인 33

제 2 장 관련 연구3

2.1 기존 연구3
2.1.1 팀원 간의 소통 및 상호작용3
2.1.2 프로젝트 관리4
2.2 Teamony의 방향성7
2.2.1 클라이언트 프로그램8
2.2.2 서버 프로그램8

제 3 장 시스템 설계 및 구현9

3.1 시스템 개요9
3.2 시스템 구성도11
3.3 시스템 설계 및 구현12
3.3.1 클라이언트 프로그램12
가. 사용자 중심의 UI/UX 디자인12
나. 실시간 협업 및 커뮤니케이션 기능14
3.3.2 서버 프로그램 14
가. 사용자 인증14
나. 데이터베이스 15
다. 파일 저장소17
3.4 시스템 핵심 기능 구현18
3.4.1 사용자 인증 절차18
가. 사용자 등록18
나. 사용자 인증 및 토큰 반환18
3.4.2 프로젝트 팀 관리19
3.4.3 통합 의사소통 기능21
가. 공적인 채널21
나. 사적인 채널22
3.4.4 프로젝트 일정관리23
가. 캘린더를 통한 프로젝트 작업 관리24
나. 대시보드를 통한 일정 요약 및 관리25

제 4 장 평가 및 개선 방향29
4.1 주요 평가 항목29
4.1.1. 애플리케이션의 플랫폼 간 호환성 문제의 해결29
가. 오래된 OS에 대한 애플리케이션 지원 부족29
나. 애플리케이션 내 팀원 간의 커뮤니케이션 효율성30
다. 사용자 인터페이스(UI) 및 사용자 경험(UX)의 친숙성30
4.2 한계점 및 개선 방향성30
가. 부족한 디바이스 테스트 환경30
나. 팀원 간의 커뮤니케이션 효율성 개선31
다. 사용자 인터페이스 및 경험의 개선31
 제 5 장 결 론32
제 6 장 부 록33
6.1 FIGMA33
6.2 Discord33
6.3 React-Native33
6.4 AndroidStudio와 Gradle34
6.5 Xcode34
6.7 Webpack34


6.8 Firebase34
6.9 Teamony 테스팅 환경35
  6.9.1 모바일 네이티브 애플리케이션 환경35
  6.9.2 PC 웹 애플리케이션 환경(WebPack build)35

참고문헌36
